USE fmban_sql_analysis; -- choosing the database to work with./*Calculating the correlation between price and caloriesperservingThis shows a positive correlation*/SELECT	r AS Coefficient			,N - 2 AS df			,(r * SQRT(N - 2)) / (SQRT(1 - POWER(r, 2))) AS t_Value -- Compare t_value in t-table df = N - 2  FROM	(			SELECT	ROUND(( -- COVARIANCE							(SUM(price * caloriesperserving) -- 								/ (SELECT COUNT(*) - 1 FROM fmban_data)							)						 	- 							(								(SELECT SUM(price) 									/ (COUNT(*)) FROM fmban_data) 								*								(SELECT SUM(caloriesperserving) 								/ (COUNT(*) - 1) FROM fmban_data)							)						)						/ SQRT( # VARIANCE MULTIPLE							(VAR_SAMP(price) * VAR_SAMP(caloriesperserving))						), 5) AS r						,COUNT(*) AS N			  FROM	fmban_data			) AS BASE;/*Calculating the correlation between price and totalsecondaysizeThis shows a positive correlation*/SELECT	r AS Coefficient			,N - 2 AS df			,(r * SQRT(N - 2)) / (SQRT(1 - POWER(r, 2))) AS t_Value -- Compare t_value in t-table df = N - 2  FROM	(			SELECT	ROUND(( -- COVARIANCE							(SUM(price * totalsecondarysize) -- 								/ (SELECT COUNT(*) - 1 FROM fmban_data)							)						 	- 							(								(SELECT SUM(price) 									/ (COUNT(*)) FROM fmban_data) 								*								(SELECT SUM(totalsecondarysize) 								/ (COUNT(*) - 1) FROM fmban_data)							)						)						/ SQRT( # VARIANCE MULTIPLE							(VAR_SAMP(price) * VAR_SAMP(totalsecondarysize))						), 5) AS r						,COUNT(*) AS N			  FROM	fmban_data			) AS BASE;/*Defining healthy food as food with low calories. When the price/calorie is higher, it means the food has less calories and it is considered healthy. */SELECT product, price/100 AS regular_price,CASE When  (price/caloriesperserving) > (price/totalsecondarysize)            AND  (price/totalsecondarysize) < (price/(vegan + glutenfree + ketofriendly + vegetarian + organic + dairyfree + sugarconscious + paleofriendly + wholefoodsdiet + lowsodium + kosher + lowfat + engine2))                      THEN 'Healthy'             ELSE 'Unhealthy' END AS food_definitionFROM fmban_data;/*Defining healthy food as food with low calories. When the price/calorie is higher, it means the food has less calories and it is considered healthy Comparing the average regular price of healthy and unhealthy foods*/SELECT CASE When  (price/caloriesperserving) > (price/totalsecondarysize)            AND  (price/totalsecondarysize) < (price/(vegan + glutenfree + ketofriendly + vegetarian + organic + dairyfree + sugarconscious + paleofriendly + wholefoodsdiet + lowsodium + kosher + lowfat + engine2))                      THEN 'Healthy Food'            ELSE 'Unhealthy Food' END AS food_definition,            ROUND(AVG(price/100),2) AS Avg_regular_price -- getting the average prices of foods to compare healthy and unhealthy foodFROM fmban_dataGROUP BY food_definition -- Grouping by the food definition to see the prices of healthy and unhealthy foods ;/*Categorizing  food into healthy and unhealthyFood with total number of special diets >= 5 are considered healthy foods Food with total number of special diets <= 4 are considered unhealthy*/SELECT               CASE WHEN (vegan + glutenfree + ketofriendly + vegetarian + organic + dairyfree + sugarconscious + paleofriendly + wholefoodsdiet + lowsodium + kosher + lowfat + engine2)                 >= 5 THEN 'Healthy Food'			 ELSE 'Unhealthy' END AS food_definition,             -- Calculating the average prices per totalsecondarysize, per caloriesperserving and price             ROUND((AVG(price/totalsecondarysize)/100),2) AS Avg_price_per_totalsecondarysize,              ROUND((AVG(price/caloriesperserving)/100),2) AS Avg_price_per_calorie,			  ROUND(AVG(price/100),2) AS Avg_regular_priceFROM fmban_dataGROUP BY food_definition;/* creating a Base that categorizes food into healthy and unhealthy Food with total number of special diets >= 5 are considered healthy foods Food with total number of special diets <= 4 are considered unhealthy*/WITH BASE AS (SELECT      product,            CASE WHEN (vegan + glutenfree + ketofriendly + vegetarian + organic + dairyfree + sugarconscious + paleofriendly + wholefoodsdiet + lowsodium + kosher + lowfat + engine2)                 >= 5 THEN 'Healthy Food'			 ELSE 'Unhealthy' END AS food_definition,             (vegan + glutenfree + ketofriendly + vegetarian + organic + dairyfree + sugarconscious + paleofriendly + wholefoodsdiet + lowsodium + kosher + lowfat + engine2) AS Total_Number_Of_Special_Diet,			 ROUND((price/100),2) AS regular_price,              ROUND(((price/totalsecondarysize)/100),2) AS price_per_totalsecondarysize,              ROUND(((price/caloriesperserving)/100),2) AS price_per_calorie            FROM fmban_data )  -- calculating the correlation of total number of special diets and regular priceSELECT	r AS Coefficient			,N - 2 AS df			,(r * SQRT(N - 2)) / (SQRT(1 - POWER(r, 2))) AS t_Value -- Compare t_value in t-table df = N - 2 if we need the p-value  FROM	(			SELECT	ROUND(( -- COVARIANCE							(SUM(regular_price * Total_Number_Of_Special_Diet) 								/ (SELECT COUNT(*) - 1 FROM fmban_data)							)						 	- 							(								(SELECT SUM(regular_price) 									/ (COUNT(*)) FROM fmban_data) 								*								(SELECT SUM(Total_Number_Of_Special_Diet) 								/ (COUNT(*) - 1) FROM fmban_data)							)						)						/ SQRT( # VARIANCE MULTIPLE							(VAR_SAMP(regular_price) * VAR_SAMP(Total_Number_Of_Special_Diet))						), 5) AS r						,COUNT(*) AS N			  FROM	BASE			) AS COR;